.data
array:  .word  7, 6, 9, 2, 5   
n:      .word  5               
msg1:   .asciiz "Array antes de ordenar:\n"
msg2:   .asciiz "\nArray despues de ordenar:\n"

.text
.globl main

main:
    li $v0, 4
    la $a0, msg1
    syscall

    la $s0, array       
    lw $s1, n           
    li $t0, 0           

print_array_start:
    beq $t0, $s1, sort_start  
    sll $t1, $t0, 2           
    add $t2, $s0, $t1         
    lw $a0, 0($t2)            

    li $v0, 1                 
    syscall

    li $v0, 4
    la $a0, space
    syscall

    addi $t0, $t0, 1
    j print_array_start

sort_start:
    la $s0, array       
    lw $s1, n           
    sub $s2, $s1, 1     

    la $a0, array
    sll $a2, $s2, 2     
    add $a1, $s0, $a2   

sort:
    beq $a0, $a1, after_sort  

    jal max   

    lw $t0, 0($a1)    
    sw $t0, 0($v0)   
    sw $v1, 0($a1)    

    addi $a1, $a1, -4 
    j sort

after_sort:
    li $v0, 4
    la $a0, msg2
    syscall

    la $s0, array
    lw $s1, n
    li $t0, 0

print_array_sorted:
    beq $t0, $s1, done
    sll $t1, $t0, 2
    add $t2, $s0, $t1
    lw $a0, 0($t2)

    li $v0, 1
    syscall

    li $v0, 4
    la $a0, space
    syscall

    addi $t0, $t0, 1
    j print_array_sorted

done:
    li $v0, 10
    syscall

max:
    move $t0, $a0       
    lw $t1, 0($t0)      
    move $t2, $t0       

max_loop:
    addi $t0, $t0, 4   
    bgt $t0, $a1, max_done

    lw $t3, 0($t0)
    slt $t4, $t1, $t3
    beq $t4, $zero, max_loop

    move $t1, $t3       
    move $t2, $t0
    j max_loop

max_done:
    move $v0, $t2       
    move $v1, $t1       
    jr $ra

.data
space: .asciiz " "
